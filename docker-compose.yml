services:
  # Django Web Application
  web:
    build: .
    image: web_ezpdf:latest
    container_name: django_app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./static:/app/static
      - ./media:/app/media
      - ./logs:/app/logs
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 1G 
          cpus: "1.0" 
        reservations:
          memory: 1G  
          cpus: "0.5" 
    ports:
      - "8000:8000"

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      sh -c "python manage.py migrate &&
        python manage.py shell < create_superuser.py &&
        python manage.py runserver 0.0.0.0:8000"







  # MySQL Service
  # db:
  #   image: mysql:8.0
  #   container_name: mysql_db
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_ROOT_PASSWORD: dinhthai2004
  #     MYSQL_DATABASE: ezpdf
  #   ports:
  #     - "3307:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #     - ./db_logs:/var/log/mysql 
  #     - ./my.cnf:/etc/mysql/mysql.cnf 
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"


  #   healthcheck:
  #     test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -pdinhthai2004 || exit 1"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3


  # nginx:
  #   build: ./nginx
  #   container_name: nginx
  #   environment:
  #     - SERVER_NAME=0.0.0.0
  #   restart: unless-stopped
  #   network_mode: host
  #   volumes:
  #     - ./nginx/logs:/var/log/nginx
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

# volumes:
#   mysql_data:

























# version: "3.9"

# services:
#   db:
#     image: mysql:8.0
#     container_name: mysql_db
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: dinhthai2004
#       MYSQL_DATABASE: ezpdf
#     ports:
#       - "3307:3306"
#     volumes:
#       - mysql_data:/var/lib/mysql

#   healthcheck:
#     test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -prootpassword || exit 1"]
#     interval: 10s
#     timeout: 5s
#     retries: 3




#   web:
#     build: .
#     image: web_ezpdf:latest
#     # image: dinhthai0312/ezpdf:v1
#     container_name: django_app
#     restart: unless-stopped
#     # network_mode: host
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"
#     depends_on:
#       - db:
#           condition: service_healthy
#     volumes:
#       - ./static:/app/static  # Mount thư mục static từ host vào container
#       - ./media:/app/media  # Mount thư mục media từ host vào container
#     env_file:
#       - .env 
#     # environment:
#     #   - DJANGO_SUPERUSER_USERNAME=admin
#     #   - DJANGO_SUPERUSER_EMAIL=admin@example.com
#     #   - DJANGO_SUPERUSER_PASSWORD=strongpassword123
#     deploy:
#       resources:
#         limits:
#           memory: 1G  # Giới hạn bộ nhớ tối đa
#           cpus: "1.0"  # Giới hạn CPU tối đa
#         reservations:
#           memory: 1G  # Bộ nhớ cần thiết tối thiểu
#           cpus: "0.5"  # CPU cần thiết tối thiểu
#     ports:
#       - "8000:8000"
#     # command: >
#     #   sh -c "python manage.py migrate &&
#     #     python manage.py runserver 0.0.0.0:8000"
#     command: >
#       sh -c "python manage.py migrate &&
#         python manage.py shell < create_superuser.py &&
#         python manage.py runserver 0.0.0.0:8000"


#   nginx:
#     build: ./nginx
#     container_name: nginx
#     environment:
#       - SERVER_NAME=0.0.0.0
#     restart: always
#     network_mode: host
#     volumes:
#       - ./nginx/logs:/var/log/nginx  # Mount thư mục logs từ container Nginx ra host
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"
# volumes:
#   mysql_data:





#   # redis:
  #   image: redis:latest 
  #   container_name: redis
  #   ports:
  #     - "6379:6379"  # Mở cổng Redis

  # celery:
  #   build: .
  #   container_name: celery_worker
  #   command: celery -A EzPDF worker --loglevel=info
  #   volumes:
  #     - .:/app  
  #   depends_on:
  #     - redis 
  #     - db    
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0  


# services:
#   web:
#     build: .
#     container_name: django_app
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env
#     depends_on:
#       - db
# command: >
#   sh -c "./wait-for-it.sh db:3306 -- python manage.py runserver 0.0.0.0:8000"

#   db:
#     image: mysql:8.0
#     container_name: mysql_db
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: dinhthai2004
#       MYSQL_DATABASE: ezpdf
#     ports:
#       - "3307:3306"
#     volumes:
#       - mysql_data:/var/lib/mysql


# volumes:
#   mysql_data:
