version: "3.9"

services:
  db:
      image: mysql:8.0
      container_name: mysql_db
      restart: always
      environment:
        MYSQL_ROOT_PASSWORD: dinhthai2004
        MYSQL_DATABASE: ezpdf
      ports:
        - "3307:3306"
      volumes:
        - mysql_data:/var/lib/mysql

  web:
    build: .
    image: web_ezpdf:latest
    # image: dinhthai0312/ezpdf:v1
    container_name: django_app
    restart: unless-stopped
    # network_mode: host
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - db
    volumes:
      - ./static:/app/static  # Mount thư mục static từ host vào container
      - ./media:/app/media  # Mount thư mục media từ host vào container
    env_file:
      - .env 
    # environment:
    #   - DJANGO_SUPERUSER_USERNAME=admin
    #   - DJANGO_SUPERUSER_EMAIL=admin@example.com
    #   - DJANGO_SUPERUSER_PASSWORD=strongpassword123
    deploy:
      resources:
        limits:
          memory: 1G  # Giới hạn bộ nhớ tối đa
          cpus: "1.0"  # Giới hạn CPU tối đa
        reservations:
          memory: 1G  # Bộ nhớ cần thiết tối thiểu
          cpus: "0.5"  # CPU cần thiết tối thiểu
    ports:
      - "8000:8000"
    # command: >
    #   sh -c "python manage.py migrate &&
    #     python manage.py runserver 0.0.0.0:8000"
    command: >
      sh -c "python manage.py migrate &&
        python manage.py shell < create_superuser.py &&
        python manage.py runserver 0.0.0.0:8000"


  nginx:
    build: ./nginx
    container_name: nginx
    environment:
      - SERVER_NAME=0.0.0.0
    restart: always
    network_mode: host
    volumes:
      - ./nginx/logs:/var/log/nginx  # Mount thư mục logs từ container Nginx ra host
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
volumes:
  mysql_data:
  # redis:
  #   image: redis:latest 
  #   container_name: redis
  #   ports:
  #     - "6379:6379"  # Mở cổng Redis

  # celery:
  #   build: .
  #   container_name: celery_worker
  #   command: celery -A EzPDF worker --loglevel=info
  #   volumes:
  #     - .:/app  
  #   depends_on:
  #     - redis 
  #     - db    
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0  


# services:
#   web:
#     build: .
#     image: web_ezpdf:latest
#     # image: dinhthai0312/ezpdf:v1
#     container_name: django_app
#     restart: unless-stopped
#     # network_mode: host
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"
#     # depends_on:
#     #   - db
#     volumes:
#       - ./static:/app/static  # Mount thư mục static từ host vào container
#       - ./media:/app/media  # Mount thư mục media từ host vào container
#     env_file:
#       - .env 
#     # environment:
#     #   - DJANGO_SUPERUSER_USERNAME=admin
#     #   - DJANGO_SUPERUSER_EMAIL=admin@example.com
#     #   - DJANGO_SUPERUSER_PASSWORD=strongpassword123
#     ports:
#       - "8000:8000"
#     command: >
#       sh -c "python manage.py migrate &&
#         python manage.py runserver 0.0.0.0:8000"
#     # command: >
#     #   sh -c "python manage.py migrate &&
#     #     python manage.py shell < create_superuser.py &&
#     #     python manage.py runserver 0.0.0.0:8000"
#     deploy:
#       resources:
#         limits:
#           memory: 1G  # Giới hạn bộ nhớ tối đa
#           cpus: "1.0"  # Giới hạn CPU tối đa
#         reservations:
#           memory: 1G  # Bộ nhớ cần thiết tối thiểu
#           cpus: "0.5"  # CPU cần thiết tối thiểu
 
 
#   nginx:
#     build: ./nginx
#     container_name: nginx
#     environment:
#       - SERVER_NAME=0.0.0.0
#     restart: always
#     network_mode: host
#     volumes:
#       - ./nginx/logs:/var/log/nginx  # Mount thư mục logs từ container Nginx ra host
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"




# version: "3.9"

# services:
#   web:
#     build: .
#     container_name: django_app
#     command: >
#       sh -c "./wait-for-it.sh db:3306 -- 
#       ./wait-for-it.sh redis:6379 -- 
#       python manage.py runserver 0.0.0.0:8000"
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env
#     depends_on:
#       - db
#       - redis

  # db:
  #   image: mysql:8.0
  #   container_name: mysql_db
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: dinhthai2004
  #     MYSQL_DATABASE: ezpdf
  #   ports:
  #     - "3307:3306"
  #   volumes:
  #     - mysql_data:/var/lib/mysql

#   redis:
#     image: redis:latest
#     container_name: redis
#     restart: always
#     ports:
#       # Optional: Remove this line if Redis doesn't need external access
#       - "6379:6379"

#   celery:
#     build: .
#     container_name: celery_worker
#     command: celery -A EzPDF worker --loglevel=info
#     volumes:
#       - .:/app
#     depends_on:
#       - db
#       - redis
#     environment:
#       - CELERY_BROKER_URL=redis://redis:6379/0
#       - DJANGO_SETTINGS_MODULE=EzPDF.settings
#       - MYSQL_ROOT_PASSWORD=dinhthai2004
#       - MYSQL_DATABASE=ezpdf

# volumes:
#   mysql_data:
