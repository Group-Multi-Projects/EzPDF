django-admin startproject myproject
python manage.py startapp myapp
Đầu tiên, bạn tạo một migration mới để ghi nhận sự thay đổi trong model:
python manage.py makemigrations
Sau khi tạo migration, bạn cần áp dụng chúng để cập nhật cơ sở dữ liệu
python manage.py startapp <tên_ứng_dụng>

python manage.py migrate
python manage.py createsuperuser
python manage.py runserver
python manage.py showmigrations
python manage.py migrate appname migration_name
Lùi lại migration (rollback):
Tạo lại cơ sở dữ liệu (reset database):
python manage.py flush

Xem thông tin cấu hình của dự án:
python manage.py diffsettings


Kiểm tra các lỗi trong dự án:
python manage.py check

python manage.py test


Khởi tạo các tệp tĩnh (static files):


Chạy lại các tệp tĩnh khi thay đổi:
bash
Copy code
python manage.py collectstatic
7. Khôi phục lại cơ sở dữ liệu
Khôi phục lại từ tệp fixture:
bash
Copy code
python manage.py loaddata <tên_fixture>
############
Xem trạng thái của các migration:
python manage.py collectstatic



bash
Copy code
python manage.py showmigrations
Lùi lại migration (rollback):

bash
Copy code
python manage.py migrate appname migration_name
Tạo lại cơ sở dữ liệu (reset database):

bash
Copy code
python manage.py flush