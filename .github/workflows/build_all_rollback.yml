name: CI/CD Pipeline  # Tên workflow

on:
  workflow_dispatch:  # Kích hoạt workflow thủ công
    inputs:
      action:
        description: 'Select action to perform'
        required: true
        default: 'build'
        type: choice
        options:
          - build
          - run-all
          - rollback  # Tùy chọn rollback
      ref: 
        description: 'Select branch or tag to run the workflow'
        required: true
        default: 'main'
jobs:
  # Job 'build': Xây dựng Docker image
  build:
    if: ${{ github.event.inputs.action == 'run-all' || github.event.inputs.action == 'build' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Get current timestamp
      #   id: timestamp
      #   run: echo "timestamp=$(date +'%Y_%m_%d_%H%M%S')" >> $GITHUB_ENV

      - name: get short SHA of commit
        id: sha
        run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t nhothoang/webezpdf:${{ env.short_sha }} .

      - name: Push Docker image to DockerHub
        run: |
          docker push nhothoang/webezpdf:${{ env.short_sha }}
  # Job 'test': Chạy các bài kiểm tra
  test:
    if: ${{ github.event.inputs.action == 'run-all' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run tests
        run: |
          echo "Running tests..."
          # Thêm lệnh kiểm tra thực tế tại đây

  # Job 'deploy': Triển khai ứng dụng
  deploy:
    if: ${{ github.event.inputs.action == 'run-all' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Create SSH Key
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem 
          
      - name: Get short SHA of commit (again)
        id: sha_deploy
        run: echo "short_sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV


      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key_path: ec2-key.pem
          script: |
            set -e
            echo "Logging into DockerHub..."
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            
            # echo "Getting the latest Docker image tag..."
            # latest_tag=$(curl -s "https://hub.docker.com/repository/docker/nhothoang/webezpdf/tags" | jq -r '.results[0].name')
            # echo "Latest image tag: $latest_tag"



            echo "Pulling the latest Docker image..."
            docker pull nhothoang/webezpdf:${{ env.short_sha }}
            
            echo "Pulling latest changes from Git repository..."
            if [ ! -d "/home/ubuntu/app" ]; then
              echo "Thư mục /home/ubuntu/app không tồn tại, tạo mới..."
              sudo mkdir /home/ubuntu/app
              git init
              git remote add origin https://${{ secrets.GITHUB_TOKEN }}@github.com/NhoThoang/abc.git
            else
              echo "Thư mục /home/ubuntu/app đã tồn tại."
            fi
        
            cd /home/ubuntu/app
            git fetch origin static_pull
            git reset --hard origin/static_pull

            echo "Shutting down existing containers and removing images..."
            docker-compose down --rmi all
            
            echo "Starting containers with the latest image..."
            docker-compose -f docker-compose1.yml up -d
            
            echo "Deployment completed!"

  # Job 'rollback': Khôi phục phiên bản trước
  rollback:
    if: ${{ github.event.inputs.action == 'rollback' }}
    runs-on: ubuntu-latest
    steps:
      - name: Create SSH Key
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem  # Đặt quyền chỉ đọc cho file key

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key_path: ec2-key.pem
          script: |
            set -e
            echo "Rolling back to previous version..."
            
            # Lấy tag của phiên bản trước
            PREVIOUS_TAG=$(docker images nhothoang/webezpdf --format '{{.Tag}}' | tail -n 2 | head -n 1)
            
            # Kiểm tra phiên bản trước
            if [ -z "$PREVIOUS_TAG" ]; then
              echo "No previous version found. Rollback failed!"
              exit 1
            fi
            
            echo "Found previous version: $PREVIOUS_TAG"
            
            # Rollback ứng dụng
            cd /home/ubuntu/app
            docker-compose down
            docker-compose up -d --build-arg IMAGE_TAG=$PREVIOUS_TAG
            echo "Rollback to version $PREVIOUS_TAG completed!"





# on:
#   push:
#     branches:
#       - main  # Khi có commit vào nhánh main

# jobs:
#   build:
#     runs-on: ubuntu-latest  # Sử dụng môi trường Ubuntu mới nhất
#     if: ${{ github.actor == 'your-username' }}  
#     # Chỉ chạy job này nếu người thực hiện push là 'your-username'
#     steps:


  